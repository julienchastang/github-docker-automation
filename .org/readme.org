#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+options: auto-id:t

#+title: readme
#+date: <2023-09-21 Thu>
#+author: Julien Chastang
#+email: chastang@ucar.edu
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 29.1 (Org mode 9.6.7)
#+cite_export:

#+property: :eval no :results none

* Setup                                                            :noexport:
  :PROPERTIES:
  :CUSTOM_ID: h-26F7AE86
  :END:

#+begin_src emacs-lisp :eval yes
  (setq org-confirm-babel-evaluate nil)
#+end_src

Publishing

#+begin_src emacs-lisp :eval yes
  (setq base-dir (concat (projectile-project-root) ".org"))

  (setq pub-dir (projectile-project-root))

  (setq org-publish-project-alist
        `(("github-docker-automation-readme"
            :base-directory ,base-dir
            :recursive t
            :base-extension "org"
            :publishing-directory ,pub-dir
            :publishing-function org-gfm-publish-to-gfm)))
#+end_src


* GitHub Docker Processor
:PROPERTIES:
:CUSTOM_ID: h-B0FEE104
:END:

This Python script automates the process of cloning multiple GitHub repositories and their specified branches, building Docker images for them, and pushing these images to DockerHub.

** Features
:PROPERTIES:
:CUSTOM_ID: h-B46BEB64
:END:

Reads a YAML file containing a list of GitHub repositories and their respective branches. Builds Docker images from each branch and tags them according to the GitHub repository and branch name. Pushes Docker images to DockerHub.

** Prerequisites
:PROPERTIES:
:CUSTOM_ID: h-3479049B
:END:

- Python 3.x
- Git
- Docker
- pyyaml package for Python

** Installation
:PROPERTIES:
:CUSTOM_ID: h-37BEA592
:END:

#+begin_src sh
  git clone https://github.com/julienchastang/github_docker_processor.git
  cd github_docker_processor
  pip install pyyaml
  docker login
  chmod +x github_docker_processor.py
#+end_src

** Usage
:PROPERTIES:
:CUSTOM_ID: h-3A9FCC1E
:END:

Create a YAML file:

#+INCLUDE: "../repos.yml" src yaml

Run the script:

#+begin_src sh
  sh github_docker_processor.py path_to_your_yaml_file.yaml
#+end_src

This script will ultimately push to DockerHub images that look like this:

#+begin_src sh
  docker push user/repo:5.4
  docker push user/repo:5.5
  docker push anotheruser/another-repo:master
  docker push anotheruser/another-repo:develop
#+end_src

** Cleanup
:PROPERTIES:
:CUSTOM_ID: h-CF21FF2B
:END:

The script will remove the cloned repositories from the local machine after each Docker image has been built and pushed.
